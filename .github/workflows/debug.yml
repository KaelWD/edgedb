name: Build Test and Publish Debug Packages

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:
    inputs: {}
  push:
    branches:
      - debug-nightly-publish

jobs:
  prep:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.whichver.outputs.branch }}

    steps:
    - uses: actions/checkout@v4

    - name: Determine package version
      shell: bash
      run: |
        branch=${GITHUB_REF#refs/heads/}
        echo branch="${branch}" >> $GITHUB_OUTPUT
      id: whichver



  build-debian-buster-x86_64:
    runs-on: ['self-hosted', 'linux', 'x64']
    needs: prep


    steps:
    - name: Build
      uses: edgedb/edgedb-pkg/integration/linux/build/debian-buster@master
      env:
        SRC_REF: "${{ needs.prep.outputs.branch }}"
        PKG_REVISION: "<current-date>"
        PKG_SUBDIST: "debug"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        EXTRA_OPTIMIZATIONS: "true"
        BUILD_IS_RELEASE: "true"
        METAPKG_GIT_CACHE: disabled

    - uses: actions/upload-artifact@v4
      with:
        name: builds-debian-buster-x86_64
        path: artifacts/debian-buster

  test-debian-buster-x86_64:
    needs: [build-debian-buster-x86_64]
    runs-on: ['self-hosted', 'linux', 'x64']

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: builds-debian-buster-x86_64
        path: artifacts/debian-buster

    - name: Test
      uses: edgedb/edgedb-pkg/integration/linux/test/debian-buster@master
      env:
        PKG_SUBDIST: "debug"
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        # edb test with -j higher than 1 seems to result in workflow
        # jobs getting killed arbitrarily by Github.
        PKG_TEST_JOBS: 0

  publish-debian-buster-x86_64:
    needs: [test-debian-buster-x86_64]
    runs-on: ['self-hosted', 'linux', 'x64']

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: builds-debian-buster-x86_64
        path: artifacts/debian-buster

    - name: Publish
      uses: edgedb/edgedb-pkg/integration/linux/upload/linux-x86_64@master
      env:
        PKG_SUBDIST: "debug"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_PLATFORM_LIBC: ""
        PACKAGE_UPLOAD_SSH_KEY: "${{ secrets.PACKAGE_UPLOAD_SSH_KEY }}"

  check-published-debian-buster-x86_64:
    needs: [publish-debian-buster-x86_64]
    runs-on: ['self-hosted', 'linux', 'x64']

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: builds-debian-buster-x86_64
        path: artifacts/debian-buster

    - name: Describe
      id: describe
      uses: edgedb/edgedb-pkg/integration/actions/describe-artifact@master
      with:
        target: debian-buster

    - name: Test Published
      uses: edgedb/edgedb-pkg/integration/linux/testpublished/debian-buster@master
      env:
        PKG_NAME: "${{ steps.describe.outputs.name }}"
        PKG_SUBDIST: "debug"
        PACKAGE_SERVER: sftp://uploader@package-upload.edgedb.net:22/
        PKG_PLATFORM: "debian"
        PKG_PLATFORM_VERSION: "buster"
        PKG_INSTALL_REF: "${{ steps.describe.outputs.install-ref }}"
        PKG_VERSION_SLOT: "${{ steps.describe.outputs.version-slot }}"

    outputs:
      version-slot: ${{ steps.describe.outputs.version-slot }}
      version-core: ${{ steps.describe.outputs.version-core }}
      catalog-version: ${{ steps.describe.outputs.catalog-version }}

  publish-docker:
    needs:
      - check-published-debian-buster-x86_64
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        repository: edgedb/edgedb-docker
        ref: master
        path: dockerfile

    - env:
        VERSION_SLOT: "${{ needs.check-published-debian-buster-x86_64.outputs.version-slot }}"
        VERSION_CORE: "${{ needs.check-published-debian-buster-x86_64.outputs.version-core }}"
        PKG_SUBDIST: "debug"
      id: tags
      run: |
        set -e

        url='https://registry.hub.docker.com/v2/repositories/edgedb/edgedb/tags?page_size=100'
        repo_tags=$(
          while [ -n "$url" ]; do
            resp=$(curl -L -s "$url")
            url=$(echo "$resp" | jq -r ".next")
            if [ "$url" = "null" ] || [ -z "$url" ]; then
              break
            fi
            echo "$resp" | jq -r '."results"[]["name"]'
          done | grep "^[[:digit:]]\+.*" | grep -v "alpha\|beta\|rc" || :
        )

        tags=( "$VERSION_CORE" )

        top=$(printf "%s\n%s\n" "$VERSION_CORE" "$repo_tags" \
              | grep "^${VERSION_SLOT}[\.-]" \
              | sort --version-sort --reverse | head -n 1)
        if [ "$top" == "$VERSION_CORE" ]; then
          tags+=( "$VERSION_SLOT" )
        fi

        if [ -z "$PKG_SUBDIST" ]; then
          top=$(printf "%s\n%s\n" "$VERSION_CORE" "$repo_tags" \
                | sort --version-sort --reverse | head -n 1)
          if [ "$top" == "$VERSION_CORE" ]; then
            tags+=( "latest" )
          fi
        fi

        IFS=,
        echo "tags=${tags[*]}" >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@edfb0fe6204400c56fbfd3feba3fe9ad1adfa345  # v3

    - name: Publish Docker Image (docker.io)
      uses: elgohr/Publish-Docker-Github-Action@43dc228e327224b2eda11c8883232afd5b34943b  # v5
      with:
        name: edgedb/edgedb
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tags: "${{ steps.tags.outputs.tags }}"
        workdir: dockerfile
        buildargs: version=${{ needs.check-published-debian-buster-x86_64.outputs.version-slot }},exact_version=${{ needs.check-published-debian-buster-x86_64.outputs.version-core }},subdist=debug
        platforms: linux/amd64

    - name: Publish Docker Image (ghcr.io)
      uses: elgohr/Publish-Docker-Github-Action@43dc228e327224b2eda11c8883232afd5b34943b  # v5
      with:
        registry: ghcr.io
        name: ${{ github.repository }}
        username: "edgedb-ci"
        password: ${{ secrets.GITHUB_CI_BOT_TOKEN }}
        tags: "${{ steps.tags.outputs.tags }}"
        workdir: dockerfile
        buildargs: version=${{ needs.check-published-debian-buster-x86_64.outputs.version-slot }},exact_version=${{ needs.check-published-debian-buster-x86_64.outputs.version-core }},subdist=debug
        platforms: linux/amd64

  workflow-notifications:
    if: failure() && github.event_name != 'pull_request'
    name: Notify in Slack on failures

    needs:
      - prep
      - build-debian-buster-x86_64
      - test-debian-buster-x86_64
      - publish-debian-buster-x86_64
      - check-published-debian-buster-x86_64
      - publish-docker
    runs-on: ubuntu-latest
    permissions:
      actions: 'read'
    steps:
      - name: Slack Workflow Notification
        uses: Gamesight/slack-workflow-status@26a36836c887f260477432e4314ec3490a84f309
        with:
          repo_token: ${{secrets.GITHUB_TOKEN}}
          slack_webhook_url: ${{secrets.ACTIONS_SLACK_WEBHOOK_URL}}
          name: 'Workflow notifications'
          icon_emoji: ':hammer:'
          include_jobs: 'on-failure'
